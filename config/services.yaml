# !Les commentaires commencant par '!' sont ajoutés dans un but de formation.

# ! REFERENCE REPONSE TEST TECHNIQUE - 4, 6:


# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            # !Utilisé pour tester la configuration manuelle des services sans autowiring
            - '../src/Service'
    App\Service\LoggerService:
        arguments: ['@logger']
        # https://symfony.com/doc/current/security.html
        # !If you're using the default services.yaml configuration, Symfony will automatically pass the security.helper to your service thanks to autowiring and the Security type-hint.
        # !Si la configuration par default est désactivée:
        # !arguments: ['@logger', '@security.helper']
    # App\Service\MessageFormatterService: ~

    # ! REFERENCE REPONSE TEST TECHNIQUE - 17:
    App\DependencyInjection\MessageFormatterCompilerPass:
        tags: ['compiler_pass']
    App\Service\MessageFormatterService: 
        tags: ['message_formatter']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
